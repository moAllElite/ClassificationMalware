import numpy as np
import pprint
import joblib
from flask import Flask, request, jsonify, render_template

app = Flask(__name__)

# Charger le modèle
model = joblib.load("ClassificationMalwareBestModel.pkl")

@app.route('/')
def home():
    return render_template('index.html')

@app.route("/predict", methods=["POST"])
def predict():
    '''
        For rendering results on HTML GUI
    '''
    # Récupérer les données du formulaire
    pprint.pprint('It\'s a malawre $ {}')
    features = []
    pprint.pprint('It\'s a malawre $ 1111')
    features.append(float(request.form['MajorLinkerVersion']))
    pprint.pprint('It\'s a malawre $ 2222')
    features.append(float(request.form['MajorImageVersion']))
    pprint.pprint('It\'s a malawre $ 3333')
    features.append(float(request.form['MajorOperatingSystemVersion']))
    pprint.pprint('It\'s a malawre $ 4444')
    features.append(float(request.form['SizeOfStackReserve']))
    pprint.pprint('It\'s a malawre $ 5555')
    features.append(float(request.form['NumberOfSections']))
    pprint.pprint('It\'s a malawre $ 6666')
    features.append(float(request.form['ResourceSize']))
    pprint.pprint('It\'s a malawre $ 7777')
    features.append(float(request.form['AddressOfEntryPoint']))
    pprint.pprint('It\'s a malawre $ 8888')
    features.append(float(request.form['legitimate']))
    pprint.pprint('It\'s a malawre $ 9999')
    # Faire la prédiction avec le modèle
    prediction = model.predict([features])
    pprint.pprint('It\'s a malawre $ {}'.format(int(prediction[0])))
    return render_template('index.html', prediction_text='It\'s a malawre $ {}'.format(int(prediction[0])))

if __name__ == "__main__":
    app.run(debug=True)
